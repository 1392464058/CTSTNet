MODE: 1             # 1: train, 2: test, 3: eval
MODEL: 3            # 2: inpaint model
MASK: 3             # 1: random block, 2: half, 3: external, 4: (external, random block), 5: (external, random block, half)
EDGE: 1             # 1: canny, 2: external
NMS: 1              # 0: no non-max-suppression, 1: applies non-max-suppression on the external edges by multiplying by Canny
SEED: 10            # random seed
GPU: [0]            # list of gpu ids
DEBUG: 0            # turns on debugging mode
VERBOSE: 0          # turns on verbose mode in the output console

Generator: 0        # 0: original
No_Bar: False        # Turn off the progressive bar

# 原图数据集
TRAIN_FLIST: /mnt/data/wyn/sttc_xiu/celeba/data/celeba_train
VAL_FLIST: /mnt/data/wyn/sttc_xiu/celeba/data/celeba_val
TEST_FLIST: /mnt/data/wyn/sttc_xiu/celeba/data/celeba_val

# 直接放原图数据集应该也可以
TRAIN_EDGE_FLIST: ./
VAL_EDGE_FLIST: ./
TEST_EDGE_FLIST: ./

# mask
TRAIN_MASK_FLIST: /mnt/data/wyn/sttc/Transformer/parismasks
VAL_MASK_FLIST: /mnt/data/wyn/sttc/Transformer/parismasks
TEST_MASK_FLIST: /mnt/data/wyn/sttc/Transformer/parismasks

LR: 0.00001                    # learning rate
D2G_LR: 0.1                   # discriminator/generator learning rate ratio
BETA1: 0.0                    # adam optimizer beta1
BETA2: 0.9                    # adam optimizer beta2
#  ?
BATCH_SIZE: 8               # input batch size for training
# ?
INPUT_SIZE: 256               # input image size for training 0 for original size
SIGMA: 2                      # standard deviation of the Gaussian filter used in Canny edge detector (0: random, -1: no edge)
# ?
MAX_ITERS: 5e6                # maximum number of iterations to train the model

EDGE_THRESHOLD: 0.5           # edge detection threshold
L1_LOSS_WEIGHT: 1             # l1 loss weight
FM_LOSS_WEIGHT: 10            # feature-matching loss weight
STYLE_LOSS_WEIGHT: 250        # style loss weight
CONTENT_LOSS_WEIGHT: 0.1      # perceptual loss weight
# ？咋看论文是0.01  就是0.01  此处配置文件这个参数没有使用：在代码中直接使用了
INPAINT_ADV_LOSS_WEIGHT: 0.1  # adversarial loss weight

GAN_LOSS: nsgan               # nsgan | lsgan | hinge
GAN_POOL_SIZE: 0              # fake images pool size

SAVE_INTERVAL: 50           # how many iterations to wait before saving model (0: never)
#SAVE_INTERVAL: 20000           # how many iterations to wait before saving model (0: never)
SAMPLE_INTERVAL: 1000         # how many iterations to wait before sampling (0: never)
SAMPLE_SIZE: 1               # number of images to sample
EVAL_INTERVAL: 50             # how many iterations to wait before model evaluation (0: never)
#EVAL_INTERVAL: 20000              # how many iterations to wait before model evaluation (0: never)
LOG_INTERVAL: 20            # how many iterations to wait before logging training status (0: never)
#LOG_INTERVAL: 1000            # how many iterations to wait before logging training status (0: never)
prior_size: 32                # The prior_size of transformer